name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

jobs:
  build_migrations:
    name: Build ðŸŽ® + EF
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: GameOps
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET (from global.json)
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json
          cache: true

      - name: Restore
        run: dotnet restore

      - name: Build (Release)
        run: dotnet build --configuration Release --no-restore --nologo -v minimal

      - name: Restore dotnet tools (EF CLI)
        run: dotnet tool restore --tool-manifest .config/dotnet-tools.json

      - name: Generate idempotent migration script
        run: |
          mkdir -p artifacts
          dotnet ef migrations script \
            --idempotent \
            --project src/App \
            --startup-project src/App \
            -o artifacts/migrations.sql

      - name: Sanity check SQL not empty
        run: test -s artifacts/migrations.sql

      - name: Upload migration script
        uses: actions/upload-artifact@v4
        with:
          name: migrations-sql
          path: artifacts/migrations.sql

  test:
    name: Tests ðŸ§ª + coverage
    runs-on: ubuntu-latest
    env:
      ASPNETCORE_ENVIRONMENT: Testing
    defaults:
      run:
        working-directory: GameOps
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET (from global.json)
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json
          cache: true

      - name: Restore
        run: dotnet restore

      - name: Test (with coverage)
        run: dotnet test --configuration Release --collect "XPlat Code Coverage" --results-directory ./TestResults

      - name: Publish coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: GameOps/TestResults/**/coverage.cobertura.xml
          if-no-files-found: error

      - name: Find coverage paths
        run: |
          echo "Searching for cobertura files..."
          find . -type f -name "coverage.cobertura.xml" -print
